{"openapi":"3.1.0","info":{"title":"Ethics Engine Enterprise API","description":"API for managing and executing Ethics Engine pipelines.","version":"0.1.0"},"paths":{"/pipelines/validate":{"post":{"tags":["pipelines"],"summary":"Validate Pipeline Definition","description":"Checks if a provided pipeline definition JSON is structurally valid\n(handled by Pydantic/FastAPI) and if its referenced components\n(identity, guidance, guardrails) exist.","operationId":"validate_pipeline_definition_pipelines_validate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline-Input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/create":{"post":{"tags":["pipelines"],"summary":"Create Pipeline Definition File","description":"Validates the provided pipeline definition's components and saves it\nas a new JSON file in the data/pipelines directory.\nUses the pipeline.id as the filename base.\nReturns 409 Conflict if a file with that ID already exists.","operationId":"create_pipeline_definition_file_pipelines_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline-Input"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/{pipeline_name}/run":{"post":{"tags":["pipelines"],"summary":"Run Existing Pipeline","description":"Loads an existing pipeline definition by its name/ID, validates its components,\nand triggers its asynchronous execution 'num_runs' times.","operationId":"run_existing_pipeline_pipelines__pipeline_name__run_post","parameters":[{"name":"pipeline_name","in":"path","required":true,"schema":{"type":"string","title":"The ID/name of the pipeline definition file (without .json, path allowed)"}},{"name":"num_runs","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Num Runs"}}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/status/{run_id}":{"get":{"tags":["pipelines"],"summary":"Get Pipeline Run Status","description":"Retrieves the current status of a specific pipeline run.\nChecks results file first, then log file.","operationId":"get_pipeline_run_status_pipelines_status__run_id__get","parameters":[{"name":"run_id","in":"path","required":true,"schema":{"type":"string","title":"The ID of the pipeline run"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Pipeline Run Status Pipelines Status  Run Id  Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/logs/{run_id}":{"get":{"tags":["pipelines"],"summary":"Get Pipeline Run Logs","description":"Retrieves detailed log entries associated with a specific pipeline run\nby filtering the main log file.","operationId":"get_pipeline_run_logs_pipelines_logs__run_id__get","parameters":[{"name":"run_id","in":"path","required":true,"schema":{"type":"string","title":"The ID of the pipeline run"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Pipeline Run Logs Pipelines Logs  Run Id  Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/pipelines/definitions":{"get":{"tags":["pipelines"],"summary":"List Pipeline Definitions","description":"Returns a list of available pipeline definition IDs (filenames relative to data/pipelines).","operationId":"list_pipeline_definitions_pipelines_definitions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Pipeline Definitions Pipelines Definitions Get"}}}},"404":{"description":"Not found"}}}},"/pipelines/definitions/{pipeline_id}":{"get":{"tags":["pipelines"],"summary":"Get Pipeline Definition","description":"Retrieves the full JSON definition of a specific pipeline by its ID.\nThe pipeline_id corresponds to the relative path within data/pipelines without the .json extension.","operationId":"get_pipeline_definition_pipelines_definitions__pipeline_id__get","parameters":[{"name":"pipeline_id","in":"path","required":true,"schema":{"type":"string","title":"The ID of the pipeline definition (e.g., 'example_pipeline' or 'subdir/my_pipeline')"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pipeline-Output"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/server/concurrency":{"get":{"tags":["server"],"summary":"Get Server Concurrency Status","description":"Provides information about the current LLM call concurrency limits and usage.","operationId":"get_server_concurrency_status_server_concurrency_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Server Concurrency Status Server Concurrency Get"}}}},"404":{"description":"Not found"}}}},"/results/":{"get":{"tags":["results"],"summary":"List Pipeline Results","description":"Returns a list of run IDs for which results files exist.","operationId":"list_pipeline_results_results__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response List Pipeline Results Results  Get"}}}},"404":{"description":"Not found"}}}},"/results/{run_id}":{"get":{"tags":["results"],"summary":"Get Pipeline Result","description":"Retrieves the full results JSON for a completed pipeline run,\nvalidated against the Results schema.","operationId":"get_pipeline_result_results__run_id__get","parameters":[{"name":"run_id","in":"path","required":true,"schema":{"type":"string","title":"The ID of the pipeline run (excluding 'run_' prefix)"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Results"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"tags":["General"],"summary":"Read Root","description":"Provides a simple welcome message.","operationId":"read_root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Interaction":{"properties":{"schema_version":{"type":"string","title":"Schema Version","description":"Semantic version of the schema.","default":"1.0.0"},"stage_id":{"type":"string","title":"Stage Id","description":"The stage ID in which this interaction occurred."},"role":{"type":"string","enum":["user","assistant","system","evaluator","tool"],"title":"Role","description":"Role of the entity in this interaction (user, assistant, system, etc.)."},"content":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Content","description":"The actual message, output content, or internal thought."},"metadata":{"anyOf":[{"$ref":"#/components/schemas/Metadata"},{"type":"null"}],"description":"Additional metadata (model, tokens, timestamp, guardrail flags)."},"reasoning_trace":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Reasoning Trace","description":"Internal reasoning trace (e.g., chain-of-thought, tree structure) if applicable."},"guardrail_triggered":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Guardrail Triggered","description":"Flag indicating if a guardrail was triggered by this interaction's content.","default":false},"guardrail_details":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Guardrail Details","description":"Details about the triggered guardrail (ID, action taken)."}},"additionalProperties":false,"type":"object","required":["stage_id","role"],"title":"Interaction","description":"Represents a single message exchange, action, or internal thought\nduring pipeline execution. Used for logging and analysis."},"Metadata":{"properties":{"model":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Model","description":"LLM model used for generation."},"tokens_used":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Tokens Used","description":"Tokens consumed for the operation."},"timestamp":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Timestamp","description":"Timestamp of the event (ISO 8601 format)."},"reasoning_tree":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Reasoning Tree","description":"Reasoning tree structure generated by the agent, if applicable."},"guardrails_triggered":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Guardrails Triggered","description":"List of guardrail IDs triggered."}},"type":"object","title":"Metadata","description":"Optional metadata for various schema components."},"Pipeline-Input":{"properties":{"schema_version":{"type":"string","title":"Schema Version","description":"Semantic version of the schema.","default":"1.0.0"},"id":{"type":"string","title":"Id","description":"Unique pipeline identifier or name."},"description":{"type":"string","title":"Description","description":"Brief summary of the pipeline's purpose or scenario."},"identity_id":{"type":"string","title":"Identity Id","description":"ID of the Identity profile to apply."},"ethical_guidance_id":{"type":"string","title":"Ethical Guidance Id","description":"ID of the Ethical Guidance framework to use."},"guardrail_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Guardrail Ids","description":"List of Guardrail IDs to enforce/monitor during this pipeline."},"stages":{"items":{"$ref":"#/components/schemas/Stage"},"type":"array","title":"Stages","description":"Ordered list of stage definitions comprising the pipeline."},"evaluation_metrics":{"anyOf":[{"$ref":"#/components/schemas/PipelineEvaluationMetrics"},{"type":"null"}],"description":"Criteria or metrics to evaluate the pipeline's overall outcome."}},"additionalProperties":false,"type":"object","required":["id","description","identity_id","ethical_guidance_id","stages"],"title":"Pipeline","description":"Defines a self-contained sequence of interactions and evaluations\nsimulating an ethical scenario or benchmark task."},"Pipeline-Output":{"properties":{"schema_version":{"type":"string","title":"Schema Version","description":"Semantic version of the schema.","default":"1.0.0"},"id":{"type":"string","title":"Id","description":"Unique pipeline identifier or name."},"description":{"type":"string","title":"Description","description":"Brief summary of the pipeline's purpose or scenario."},"identity_id":{"type":"string","title":"Identity Id","description":"ID of the Identity profile to apply."},"ethical_guidance_id":{"type":"string","title":"Ethical Guidance Id","description":"ID of the Ethical Guidance framework to use."},"guardrail_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Guardrail Ids","description":"List of Guardrail IDs to enforce/monitor during this pipeline."},"stages":{"items":{"$ref":"#/components/schemas/Stage"},"type":"array","title":"Stages","description":"Ordered list of stage definitions comprising the pipeline."},"evaluation_metrics":{"anyOf":[{"$ref":"#/components/schemas/PipelineEvaluationMetrics"},{"type":"null"}],"description":"Criteria or metrics to evaluate the pipeline's overall outcome."}},"additionalProperties":false,"type":"object","required":["id","description","identity_id","ethical_guidance_id","stages"],"title":"Pipeline","description":"Defines a self-contained sequence of interactions and evaluations\nsimulating an ethical scenario or benchmark task."},"PipelineEvaluationMetrics":{"properties":{"expected_outcome":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Expected Outcome","description":"Description of the expected correct or ideal outcome."},"principle_alignment":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Principle Alignment","description":"List of ethical principles expected to be upheld."},"custom_metrics":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Custom Metrics","description":"Any other custom evaluation criteria or metrics."}},"additionalProperties":true,"type":"object","title":"PipelineEvaluationMetrics","description":"Defines expected outcomes or criteria for evaluating a pipeline run."},"ResultMetrics":{"properties":{"correctness":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Correctness","description":"Score for correctness (e.g., 0.0 to 1.0)."},"principle_alignment":{"anyOf":[{"additionalProperties":{"type":"number"},"type":"object"},{"type":"null"}],"title":"Principle Alignment","description":"Scores for alignment with specific ethical principles (e.g., {'fairness': 0.8})."},"ethical_score":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Ethical Score","description":"Overall composite ethical score, if calculated."},"tokens_used_total":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Tokens Used Total","description":"Total tokens used for the entire pipeline run."},"latency_seconds":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Latency Seconds","description":"Total time taken for the pipeline run in seconds."},"custom_metrics":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Custom Metrics","description":"Any other custom metrics recorded."}},"additionalProperties":true,"type":"object","title":"ResultMetrics","description":"Structure for quantitative evaluation metrics."},"ResultViolation":{"properties":{"type":{"type":"string","enum":["guardrail","ethical_principle"],"title":"Type","description":"Type of violation."},"id":{"type":"string","title":"Id","description":"ID of the guardrail or principle violated."},"stage_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Stage Id","description":"Stage where the violation occurred."},"details":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Details","description":"Additional details about the violation."},"severity":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Severity","description":"Severity of the violation (e.g., from Guardrail)."}},"additionalProperties":false,"type":"object","required":["type","id"],"title":"ResultViolation","description":"Details about a specific violation (guardrail or ethical principle)."},"Results":{"properties":{"schema_version":{"type":"string","title":"Schema Version","description":"Semantic version of the schema.","default":"1.0.0"},"run_id":{"type":"string","title":"Run Id","description":"Unique identifier for this specific pipeline run."},"pipeline_id":{"type":"string","title":"Pipeline Id","description":"Identifier of the pipeline definition that was run."},"timestamp_start":{"type":"string","title":"Timestamp Start","description":"Timestamp when the run started (ISO 8601)."},"timestamp_end":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Timestamp End","description":"Timestamp when the run finished (ISO 8601)."},"identity_id":{"type":"string","title":"Identity Id","description":"ID of the Identity profile used."},"ethical_guidance_id":{"type":"string","title":"Ethical Guidance Id","description":"ID of the Ethical Guidance framework used."},"guardrail_ids_active":{"items":{"type":"string"},"type":"array","title":"Guardrail Ids Active","description":"List of Guardrail IDs active during the run."},"interactions":{"items":{"$ref":"#/components/schemas/Interaction"},"type":"array","title":"Interactions","description":"Chronological list of interactions that occurred."},"outcome":{"type":"string","enum":["success","failure","guardrail_violation","error","timeout","pending"],"title":"Outcome","description":"Summary status of the final outcome."},"outcome_details":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Outcome Details","description":"Further details or explanation of the outcome."},"violations":{"items":{"$ref":"#/components/schemas/ResultViolation"},"type":"array","title":"Violations","description":"List of any guardrail or ethical principle violations detected."},"metrics":{"anyOf":[{"$ref":"#/components/schemas/ResultMetrics"},{"type":"null"}],"description":"Quantitative evaluation metrics."},"comparison_baseline_run_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Comparison Baseline Run Id","description":"ID of a baseline run for comparison purposes."},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Notes","description":"Additional commentary or qualitative analysis from the run."}},"additionalProperties":false,"type":"object","required":["run_id","pipeline_id","timestamp_start","identity_id","ethical_guidance_id","guardrail_ids_active","interactions","outcome"],"title":"Results","description":"Records the outcomes of a pipeline execution, including configuration,\ninteractions, violations, and evaluation metrics."},"Stage":{"properties":{"schema_version":{"type":"string","title":"Schema Version","description":"Semantic version of the schema.","default":"1.0.0"},"id":{"type":"string","title":"Id","description":"Unique identifier of the stage within the pipeline."},"type":{"type":"string","enum":["LLM","interaction","evaluation","action","tool"],"title":"Type","description":"The type of stage (LLM, evaluation, etc.)."},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"Optional description of the stage's purpose."},"role":{"anyOf":[{"type":"string","enum":["assistant","user","system"]},{"type":"null"}],"title":"Role","description":"Role of the agent at this stage (assistant, user, system)."},"prompt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Prompt","description":"Prompt template or instruction for the LLM stage. Can use placeholders like {prev_stage.output_label}."},"function_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Function Id","description":"Identifier for the function to execute (for 'evaluation' type)."},"tool_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tool Id","description":"Identifier for the tool to execute (for 'tool' type)."},"participants":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Participants","description":"List of participant names/roles (for 'interaction' type using GroupChat)."},"participant_configs":{"anyOf":[{"additionalProperties":{"type":"object"},"type":"object"},{"type":"null"}],"title":"Participant Configs","description":"Optional configurations per participant (e.g., identity_id, ethical_guidance_id). Keyed by participant name."},"context":{"anyOf":[{"additionalProperties":{"type":"string"},"type":"object"},{"type":"null"}],"title":"Context","description":"Context data/references for the stage (e.g., for 'interaction' type)."},"inputs":{"anyOf":[{"additionalProperties":{"type":"string"},"type":"object"},{"type":"null"}],"title":"Inputs","description":"References to data needed from prior stages (name: reference_string)."},"outputs":{"allOf":[{"$ref":"#/components/schemas/StageOutputSpec"}],"description":"Specification of what this stage produces and how to label it."},"guardrails":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Guardrails","description":"List of Guardrail IDs specifically applied at this stage (overrides/adds to pipeline level)."},"ag2_config":{"anyOf":[{"$ref":"#/components/schemas/StageAG2Config"},{"type":"null"}],"description":"Specific AG2 ReasoningAgent configuration for this stage."},"timeout":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Timeout","description":"Timeout in seconds for this stage."},"retries":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Retries","description":"Number of retries if the stage fails.","default":0}},"additionalProperties":false,"type":"object","required":["id","type","outputs"],"title":"Stage","description":"Represents a discrete step or phase within a pipeline (e.g., LLM call, evaluation)."},"StageAG2Config":{"properties":{"max_depth":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Max Depth","description":"Max depth for reasoning (e.g., tree-of-thought, reflection)."},"method":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Method","description":"Reasoning method (e.g., 'tree_of_thought', 'reflection', 'beam_search')."}},"additionalProperties":true,"type":"object","title":"StageAG2Config","description":"Configuration specific to AG2 ReasoningAgent for a stage."},"StageOutputSpec":{"properties":{"spec":{"additionalProperties":{"type":"string"},"type":"object","title":"Spec","description":"Specification of stage outputs (label: type)."}},"additionalProperties":false,"type":"object","required":["spec"],"title":"StageOutputSpec","description":"Defines the expected output(s) of a stage and how to label them."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}